---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import TagWrapper from '../components/tag/TagWrapper.astro';
import { toSlug } from '../utils/manipulateTags';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, tags } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			.title {
				font-size: 2em;
				margin: 0.25em 0 0;
			}
			hr {
				border-top: 1px dashed;
				@apply text-gb-lm-light-green dark:text-gb-dark-green;
				margin: 1rem 0;
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				{heroImage && <img width={720} height={360} src={heroImage} alt="" />}
				<h1 class="title">{title}</h1>
				<FormattedDate date={pubDate} />
				{
					updatedDate && (
						<div class="last-updated-on">
							Last updated on <FormattedDate date={updatedDate} />
						</div>
					)
				}
				<TagWrapper tags={tags.map(toSlug)} />
				<hr />
				<slot />
			</article>
		</main>
		<Footer />
	</body>
</html>

<script>
	let copyButtonLabel = "Copy Code";
	let codeBlocks = Array.from(document.querySelectorAll("pre"));

	for (let codeBlock of codeBlocks) {
		let wrapper = document.createElement("div");
		wrapper.style.position = "relative";

		let copyButton = document.createElement("button");
		copyButton.className = "copy-code";
		copyButton.innerHTML = copyButtonLabel;

		codeBlock.setAttribute("tabindex", "0");
		codeBlock.appendChild(copyButton);
		// wrap codebock with relative parent element
		codeBlock.parentNode.insertBefore(wrapper, codeBlock);
		wrapper.appendChild(codeBlock);

		copyButton.addEventListener("click", async () => {
		await copyCode(codeBlock, copyButton);
		});
	}

	async function copyCode(block, button) {
		let code = block.querySelector("code");
		let text = code.innerText;

		await navigator.clipboard.writeText(text);

		// visual feedback that task is completed
		button.innerText = "Code Copied";

		setTimeout(() => {
		button.innerText = copyButtonLabel;
		}, 700);
	}
</script>

<style is:global>
	.copy-code {
		position: absolute;
		top: 0;
		right: 0;
		padding: 0.25rem 0.5rem;
		font-size: 0.75rem;
		line-height: 1rem;
		@apply bg-gb-dm-bg4;
	}

	.copy-code:hover { @apply bg-gb-dm-bg3 }
</style>